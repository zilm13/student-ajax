<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>student-ajax3</groupId>
    <artifactId>student-ajax3</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Student spring web application</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <org.springframework.version>3.2.4.RELEASE</org.springframework.version>
        <org.springframework.spring-mock.version>2.0.8</org.springframework.spring-mock.version>
        <org.mockito.version>1.9.5</org.mockito.version>
        <org.hamcrest.version>1.3</org.hamcrest.version>
        <junit.version>4.6</junit.version>
        <org.slf4j.version>1.7.5</org.slf4j.version>
        <javax.servlet.servlet-api.version>2.5</javax.servlet.servlet-api.version>
        <javax.servlet.jstl.version>1.2</javax.servlet.jstl.version>
        <javax.servlet.jsp.jsp-api.version>2.2</javax.servlet.jsp.jsp-api.version>
        <javax.validation.version>1.1.0.Final</javax.validation.version>
        <javassist.version>3.3</javassist.version>
        <org.hibernate.version>4.2.0.Final</org.hibernate.version>
        <mysql-connector-java.version>5.1.27</mysql-connector-java.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <com.fasterxml.jackson.version>2.0.4</com.fasterxml.jackson.version>
        <org.reflections.version>0.9.9-RC1</org.reflections.version>
        <maven-surefire-plugin.version>2.12</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
    </properties>

    <dependencies>
        <!-- Needed for tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Needed for logging by spring and hibernate -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${org.slf4j.version}</version>
        </dependency>
        <!-- Most common java servlet dependency -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${javax.servlet.servlet-api.version}</version>
        </dependency>
        <!-- jstl tag library -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${javax.servlet.jstl.version}</version>
        </dependency>
        <!-- library for .jsp -->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${javax.servlet.jsp.jsp-api.version}</version>
        </dependency>
        <!-- library for most validation annotations-->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation.version}</version>
        </dependency>
        <!-- Hibernate ORM core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <!-- Additional validation annotations, not included in common javax.validation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <!-- Hibernate entity manager, needed for JPA via Hibernate-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>

        <!-- Main part of Spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <!-- Spring ORM dependency-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <!-- Spring web-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <!-- Spring web model view controller-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <!-- Spring test-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>${org.springframework.spring-mock.version}</version>
        </dependency>

        <!-- Mockito for tests -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${org.mockito.version}</version>
        </dependency>
        <!-- Hamcrest  dependency for searching string in html result in tests -->
        <!--
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${org.hamcrest.version}</version>
        </dependency>
        -->

        <!-- On the fly java code generation, Hibernate dependency-->
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
        </dependency>
        <!-- MySQL connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Connection pool provider-->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
        </dependency>
        <!-- Dependency for JSON realization -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${com.fasterxml.jackson.version}</version>
        </dependency>
        <!-- Dependency for JSON realization -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${com.fasterxml.jackson.version}</version>
        </dependency>
        <!-- Java runtime classpath and metadata analyzer -->
        <!--
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${org.reflections.version}</version>
        </dependency>
        -->
    </dependencies>


    <build>
        <finalName>student-spring</finalName>
        <plugins>
            <!-- Maven plugin used for tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Tests.java</include>
                    </includes>
                 </configuration>
            </plugin>
            <!-- Maven plugin for setting output version of java code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <!-- Maven plugin for tomcat 7 deploying-->
            <!-- add to catalina.sh beginning for UTF-8
             JAVA_OPTS="-Djavax.servlet.request.encoding=UTF-8 -Dfile.encoding=UTF-8 ${JAVA_OPTS}"
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat7-maven-plugin.version}</version>
                <configuration>
                    <server>tomcat</server>
                    <url>http://127.0.0.1:8100/manager/text</url>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>com.springsource.repository.maven.release</id>
            <url>http://repo.springsource.org/release/</url>
            <snapshots><enabled>false</enabled></snapshots>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.release</id>
            <url>http://repository.springsource.com/maven/bundles/release/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/libs-snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>