package it._7bits.web.student.dao;

import java.util.List;
import java.util.Map;

/**
 * Base Entity DAO Interface
 */
public interface IEntityDao<Entity> {
    /**
     * Find all Entity occurrences
     * @return List with all Entities found
     * @throws DaoGeneralException if operation fails
     */
    public List<Entity> findAll ()
            throws DaoGeneralException;

    /**
     * Find all Entities using query
     * @param query         Named query
     * @param parameters    Parameters to use in query
     * @return List of all Entities returned from source using corresponding query
     * @throws DaoGeneralException if operation fails
     */
    public List<Entity> findByQuery (final String query,
                                     final Map<String,Object> parameters)
            throws DaoGeneralException;

    /**
     * Find Entity using its id
     * @param id    Id of Entity
     * @return Entity
     * @throws DaoGeneralException if operation fails
     */
    public Entity findById (final Long id)
            throws DaoGeneralException;

    /**
     * Add new Entity to source.
     * Assumes it does not exist in it.
     * @param entity new Entity, id should be null if auto-generated
     * @throws DaoGeneralException if operation fails
     */
    public void add (final Entity entity)
            throws DaoGeneralException;

    /**
     * Update Entity which is already in source
     * @param entity    Entity to update
     * @throws DaoGeneralException if operation fails
     */
    public void update (final Entity entity)
            throws DaoGeneralException;

    /**
     * Remove Entity from the source
     * @param entity    Entity to remove
     * @throws DaoGeneralException if operation fails
     */
    public void remove (final Entity entity)
            throws DaoGeneralException;

    /**
     * Get Entity name from Dao.
     * Useful to form queries in Service layer
     * @return Entity name
     */
    public String getEntityName ();
}
